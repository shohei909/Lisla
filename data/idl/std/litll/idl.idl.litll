/// 'IDL for Litll Interface Description Language (Litll IDL)'
/// [license "public domain"]
/// [schema litll.idl.Idl]
[package litll]
[import litll.core]

/// [document_tag litll.idl.document.IdlDocumentTag]
[tuple Idl
    [package_declaration PackageDeclaration]
    [import_declarations.. ImportDeclaration]
    [type_definitions.. TypeDefinition]
]

[enum PackageDeclaration
    [package [package PackagePath]]
]

[enum ImportDeclaration
    [import [module ModulePath]]
]

/// [document_tag litll.idl.document.TypeDefinitionDocumentTag]
[enum TypeDefinition
    [newtype [name TypeNameDeclaration] [type TypeReference]]
    [tuple [name TypeNameDeclaration] [arguments.. TupleArgument]]
    [enum [name TypeNameDeclaration] [constructors.. EnumConstructor]]
    [struct [name TypeNameDeclaration] [fields.. StructField]]
]

[enum TypeNameDeclaration
    [[primitive unfold] [name TypeName]]
    [[generic tuple] [name TypeName] [parameters.. TypeParameterDeclaration]]
]
[enum TypeParameterDeclaration
    [[type_name unfold] [type_name TypeName]]
    [[dependence unfold] [declaration TypeDependenceDeclaration]]
]
[newtype TypeName String]
[tuple TypeDependenceDeclaration
    [name TypeDependenceName] [type TypeReference]
]
[newtype TypeDependenceName String]

[enum TupleArgument
    [[label unfold] [constant String]]
    [[data unfold] [argument Argument]]
]
[tuple Argument 
    [name ArgumentName]
    [type TypeReference]
    [default_value? Any]
]
[newtype ArgumentName String]

[enum EnumConstructor
    [[primitive unfold] [name EnumConstructorName]]
    [[parameterized unfold] [constructor ParameterizedEnumConstructor]]
]
[tuple ParameterizedEnumConstructor
    [header EnumConstructorHeader] [arguments.. TupleArgument]
]
[enum EnumConstructorHeader
    [[primitive unfold] [name EnumConstructorName]]
    [[unfold tuple] [name EnumConstructorName] unfold]
    [[tuple tuple] [name EnumConstructorName] tuple]
]
[newtype EnumConstructorName String]

[enum StructField
    [[field tuple] [header StructFieldHeader] [type TypeReference]]
    [[boolean unfold] [name StructFieldName]]
]
[enum StructFieldHeader
    [[primitive unfold] [name StructFieldName]]
    [[unfold tuple] [name StructFieldName] unfold]
]
[newtype StructFieldName String]

[newtype PackagePath String]
[newtype ModulePath String]
[newtype TypePath String]

[enum TypeReference
    [[primitive unfold] [type_path TypePath]]
    [[generic unfold] [type GenericTypeReference]]
]
[tuple GenericTypeReference
    [type_path TypePath] [parameters.. TypeReferenceParameter]
]
[newtype TypeReferenceParameter Any]
