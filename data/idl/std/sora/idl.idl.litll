/// 'IDL for Litll Interface Description Language (Litll IDL)'
/// [schema litll.idl.Idl]

[package litll]

[import litll.core]

/// [document_tag litll.idl.document.IdlDocumentTag]
[tuple Idl
    [header_tags.. HeaderTag]
    [package_declaration PackageDeclaration [Package]]
    [import_declarations.. ImportDeclaration]
    [type_definitions.. TypeDefinition]
]

[enum HeaderTag
    overwrite
]

[enum PackageDeclaration
    [package [package PackagePath]]
]

[enum ImportDeclaration
    [import [module ModulePath]]
]

/// [document_tag litll.idl.document.TypeDefinitionDocumentTag]
[enum TypeDefinition
    [struct [name TypeNameDeclaration] [arguments.. Argument]]
    [enum [name TypeNameDeclaration] [constructors.. EnumConstructor]]
    [alias [name TypeNameDeclaration] [type TypeReference]]
    [union [name TypeNameDeclaration] [elements.. UnionConstructor]]
    [tuple [name TypeNameDeclaration] [arguments.. Argument]]
]
[union TypeNameDeclaration
    [primitive TypeName]
    [generic GenericTypeName]
]
[tuple GenericTypeName
    [name TypeName]
    [parameters.. TypeParameterDeclaration]
]
[union TypeParameterDeclaration
    [type_name TypeName]
    [dependence TypeDependenceDeclaration]
]
[alias TypeName String]
[tuple TypeDependenceDeclaration
    [name TypeDependenceName]
    [type TypeReference]
]
[alias TypeDependenceName String]


/// [document_tag litll.idl.document.ArgumentDocumentTag]
[tuple Argument 
    [name ArgumentName]
    [type TypeReference]
    [default_value [Option Any] []]
]
[alias ArgumentName String]


// [document_tag litll.idl.document.EnumConstructorDocumentTag]
[union EnumConstructor
    [primitive EnumConstructorName]
    [parameterized ParameterizedEnumConstructor]
]

[tuple ParameterizedEnumConstructor
    [name EnumConstructorName]
    [arguments.. Argument]
]
[alias EnumConstructorName String]


/// [document_tag litll.idl.document.UnionConstructorDocumentTag]
[tuple UnionConstructor 
    [name UnionConstructorName]
    [type TypeReference]
]
[alias UnionConstructorName String]


[alias PackagePath [String]]
[alias ModulePath [String]]
[alias TypePath [String]]

[union TypeReference
    [primitive TypePath]
    [generic GenericTypeReference]
]

[tuple GenericTypeReference
    [type_path TypePath] 
    [parameters.. TypeReference]
]
