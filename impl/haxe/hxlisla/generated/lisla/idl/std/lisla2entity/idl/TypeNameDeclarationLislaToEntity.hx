// This file is generated by hxlisla.
package lisla.idl.std.lisla2entity.idl;
class TypeNameDeclarationLislaToEntity {
    public static function process(context:lisla.idl.lisla2entity.LislaToEntityContext):hxext.ds.Result<lisla.idl.std.entity.idl.TypeNameDeclaration, lisla.idl.lisla2entity.error.LislaToEntityError> return switch context.lisla {
        case lisla.core.Lisla.Str(_):{
            hxext.ds.Result.Ok(lisla.idl.std.entity.idl.TypeNameDeclaration.Primitive(switch (lisla.idl.std.lisla2entity.idl.TypeNameLislaToEntity.process(context)) {
                case hxext.ds.Result.Ok(data):{
                    data;
                };
                case hxext.ds.Result.Err(data):{
                    return hxext.ds.Result.Err(data);
                };
            }));
        };
        case lisla.core.Lisla.Arr(array) if (1 <= array.length && array.data[0].match(lisla.core.Lisla.Str(_))):{
            var arrayContext = new lisla.idl.lisla2entity.LislaToEntityArrayContext(array, 0, context.config);
            var data = {
                var arg0 = switch (arrayContext.read(lisla.idl.std.lisla2entity.idl.TypeNameLislaToEntity.process)) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Err(data):{
                        return hxext.ds.Result.Err(data);
                    };
                };
                var arg1 = switch (arrayContext.readRest(lisla.idl.std.lisla2entity.idl.TypeParameterDeclarationLislaToEntity.process, function(data) {
                        return switch data {
                            case lisla.core.Lisla.Str(_):true;
                            case lisla.core.Lisla.Arr(array) if (array.length == 2 && array.data[0].match(lisla.core.Lisla.Str(_))):true;
                            case _:false;
                        };
                    })) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Err(data):{
                        return hxext.ds.Result.Err(data);
                    };
                };
                hxext.ds.Result.Ok(lisla.idl.std.entity.idl.TypeNameDeclaration.Generic(arg0, arg1));
            };
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Err(error);
                };
            };
        };
        case data:hxext.ds.Result.Err(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(context.lisla, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.UnmatchedEnumConstructor(["generic"])));
    };
}