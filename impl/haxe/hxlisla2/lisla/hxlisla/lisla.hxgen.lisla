(target arraytree 
    (version 0.0.0)
    (haxe_package arraytree.idl.std)
)

(entity
    ; for ArrayTree Standard Library
    (filter arraytree.core.Option   arraytree.idl.std.entity.core.ArrayTreeOption)
    (filter arraytree.core.Single   arraytree.idl.std.entity.core.ArrayTreeSingle)
    (filter arraytree.core.Int64    arraytree.idl.std.entity.core.ArrayTreeInt64)
    (filter arraytree.core.Int32    arraytree.idl.std.entity.core.ArrayTreeInt32)
    (filter arraytree.core.Int16    arraytree.idl.std.entity.core.ArrayTreeInt16)
    (filter arraytree.core.Int8     arraytree.idl.std.entity.core.ArrayTreeInt8)
    (filter arraytree.core.UInt64   arraytree.idl.std.entity.core.ArrayTreeUInt64)
    (filter arraytree.core.UInt32   arraytree.idl.std.entity.core.ArrayTreeUInt32)
    (filter arraytree.core.UInt16   arraytree.idl.std.entity.core.ArrayTreeUInt16)
    (filter arraytree.core.UInt8    arraytree.idl.std.entity.core.ArrayTreeUInt8)
    (filter arraytree.core.Map      arraytree.idl.std.entity.core.ArrayTreeMap)
    (filter arraytree.core.Boolean  arraytree.idl.std.entity.core.ArrayTreeBoolean)
    (filter arraytree.core.Float64  arraytree.idl.std.entity.core.ArrayTreeFloat64)
    (filter arraytree.core.Date     arraytree.idl.std.entity.core.ArrayTreeDate)
    (filter arraytree.core.Time     arraytree.idl.std.entity.core.ArrayTreeTime)
    (filter arraytree.core.DateTime arraytree.idl.std.entity.core.ArrayTreeDateTime)
)
