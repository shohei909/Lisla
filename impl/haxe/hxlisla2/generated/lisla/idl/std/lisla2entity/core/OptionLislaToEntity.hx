// This file is generated by hxarraytree.
package arraytree.idl.std.arraytree2entity.core;
class OptionArrayTreeToEntity {
    public static function process<T>(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext, tArrayTreeToEntity):hxext.ds.Result<arraytree.idl.std.entity.core.ArrayTreeOption<T>, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return switch context.arraytree.kind {
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 0):{
            var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
            var data = hxext.ds.Result.Ok(arraytree.idl.std.entity.core.ArrayTreeOption.None);
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Error(error);
                };
            };
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 1):{
            var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
            var data = {
                var arg0 = switch (arrayContext.read(tArrayTreeToEntity.process)) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Error(data):{
                        return hxext.ds.Result.Error(data);
                    };
                };
                hxext.ds.Result.Ok(arraytree.idl.std.entity.core.ArrayTreeOption.Some(arg0));
            };
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Error(error);
                };
            };
        };
        case data:hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.UnmatchedEnumConstructor(["none", "some"])));
    };
}