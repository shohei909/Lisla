// This file is generated by hxarraytree.
package arraytree.idl.std.arraytree2entity.idl;
class StructElementArrayTreeToEntity {
    public static function process(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext):hxext.ds.Result<arraytree.idl.std.entity.idl.StructElement, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return switch context.arraytree.kind {
        case arraytree.data.tree.al.AlTreeKind.Leaf(_):{
            hxext.ds.Result.Ok(arraytree.idl.std.entity.idl.StructElement.Label(switch (arraytree.idl.std.arraytree2entity.idl.StructElementNameArrayTreeToEntity.process(context)) {
                case hxext.ds.Result.Ok(data):{
                    data;
                };
                case hxext.ds.Result.Error(data):{
                    return hxext.ds.Result.Error(data);
                };
            }));
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 1 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):{
            var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
            var data = {
                var arg0 = switch (arrayContext.read(arraytree.idl.std.arraytree2entity.idl.StructElementNameArrayTreeToEntity.process)) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Error(data):{
                        return hxext.ds.Result.Error(data);
                    };
                };
                hxext.ds.Result.Ok(arraytree.idl.std.entity.idl.StructElement.NestedLabel(arg0));
            };
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Error(error);
                };
            };
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (2 <= array.length && array.length <= 3 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):{
            hxext.ds.Result.Ok(arraytree.idl.std.entity.idl.StructElement.Field(switch (arraytree.idl.std.arraytree2entity.idl.StructFieldArrayTreeToEntity.process(context)) {
                case hxext.ds.Result.Ok(data):{
                    data;
                };
                case hxext.ds.Result.Error(data):{
                    return hxext.ds.Result.Error(data);
                };
            }));
        };
        case data:hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.UnmatchedEnumConstructor(["nested_label"])));
    };
}