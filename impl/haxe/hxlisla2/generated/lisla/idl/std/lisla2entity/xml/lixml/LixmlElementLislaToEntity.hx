// This file is generated by hxarraytree.
package arraytree.idl.std.arraytree2entity.xml.lixml;
class LixmlElementArrayTreeToEntity {
    public static function process(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext):hxext.ds.Result<arraytree.idl.std.entity.xml.lixml.LixmlElement, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> {
        return switch (context.arraytree.kind) {
            case arraytree.data.tree.al.AlTreeKind.Leaf(_):{
                hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.CantBeString));
            };
            case arraytree.data.tree.al.AlTreeKind.Arr(array):{
                var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
                var instance = {
                    var arg0 = switch (arrayContext.read(arraytree.idl.std.arraytree2entity.xml.lixml.LixmlElementNameArrayTreeToEntity.process)) {
                        case hxext.ds.Result.Ok(data):{
                            data;
                        };
                        case hxext.ds.Result.Error(data):{
                            return hxext.ds.Result.Error(data);
                        };
                    };
                    var arg1 = switch (arrayContext.readRest(arraytree.idl.std.arraytree2entity.xml.lixml.LixmlAttributeArrayTreeToEntity.process, function(data) {
                            return switch data.kind {
                                case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array.length <= 2 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):true;
                                case _:false;
                            };
                        })) {
                        case hxext.ds.Result.Ok(data):{
                            data;
                        };
                        case hxext.ds.Result.Error(data):{
                            return hxext.ds.Result.Error(data);
                        };
                    };
                    var arg2 = switch (arrayContext.readVariableOptionalInline(arraytree.idl.std.arraytree2entity.xml.lixml.LixmlChildrenTupleArrayTreeToEntity.variableInlineProcess, function(data) {
                            return switch data.kind {
                                case arraytree.data.tree.al.AlTreeKind.Leaf(string) if (string.data == ">"):true;
                                case _:false;
                            };
                        })) {
                        case hxext.ds.Result.Ok(data):{
                            data;
                        };
                        case hxext.ds.Result.Error(data):{
                            return hxext.ds.Result.Error(data);
                        };
                    };
                    var instance = new arraytree.idl.std.entity.xml.lixml.LixmlElement(arg0, arg1, arg2);
                    hxext.ds.Result.Ok(instance);
                };
                switch (arrayContext.closeOrError()) {
                    case haxe.ds.Option.None:{
                        instance;
                    };
                    case haxe.ds.Option.Some(data):{
                        hxext.ds.Result.Error(data);
                    };
                };
            };
        };
    }
    public static function variableInlineProcess(arrayContext:arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext):hxext.ds.Result<arraytree.idl.std.entity.xml.lixml.LixmlElement, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return null;
}