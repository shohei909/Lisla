// This file is generated by hxarraytree.
package arraytree.idl.std.arraytree2entity.core;
class FixedArrayArrayTreeToEntity {
    public static function process<T>(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext, tArrayTreeToEntity, dependenceLength:arraytree.idl.std.entity.core.ArrayTreeInt64):hxext.ds.Result<arraytree.idl.std.entity.core.FixedArray<T>, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> {
        return switch (arraytree.idl.std.arraytree2entity.ArrayArrayTreeToEntity.process(context, tArrayTreeToEntity)) {
            case hxext.ds.Result.Ok(data):{
                {
                    var instance = new arraytree.idl.std.entity.core.FixedArray(data, dependenceLength);
                    hxext.ds.Result.Ok(instance);
                };
            };
            case hxext.ds.Result.Error(data):{
                hxext.ds.Result.Error(data);
            };
        };
    }
    public static function variableInlineProcess<T>(arrayContext:arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext, tArrayTreeToEntity, dependenceLength:arraytree.idl.std.entity.core.ArrayTreeInt64, tArrayTreeToEntity, dependenceLength:arraytree.idl.std.entity.core.ArrayTreeInt64):hxext.ds.Result<arraytree.idl.std.entity.core.FixedArray<T>, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return null;
}