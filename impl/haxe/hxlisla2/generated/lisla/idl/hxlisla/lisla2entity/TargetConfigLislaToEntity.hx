// This file is generated by hxarraytree.
package arraytree.idl.hxarraytree.arraytree2entity;
class TargetConfigArrayTreeToEntity {
    public static function process(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext):hxext.ds.Result<arraytree.idl.hxarraytree.entity.TargetConfig, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return switch (context.arraytree.kind) {
        case arraytree.data.tree.al.AlTreeKind.Leaf(_):{
            hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.CantBeString));
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array):{
            {
                var arg0 = haxe.ds.Option.None;
                var arg1 = haxe.ds.Option.None;
                for (arraytreeData in array) {
                    var context = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(arraytreeData, context.config);
                    switch arraytreeData.kind {
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 2 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "version")) && array[1].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):switch (arg0) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("version")));
                            };
                            case haxe.ds.Option.None:{
                                arg0 = haxe.ds.Option.Some({
                                    var context = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(array[1], context.config);
                                    switch (arraytree.idl.std.arraytree2entity.util.version.VersionArrayTreeToEntity.process(context)) {
                                        case hxext.ds.Result.Ok(data):{
                                            data;
                                        };
                                        case hxext.ds.Result.Error(data):{
                                            return hxext.ds.Result.Error(data);
                                        };
                                    };
                                });
                            };
                        };
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 2 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "haxe_package")) && array[1].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):switch (arg1) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("haxe_package")));
                            };
                            case haxe.ds.Option.None:{
                                arg1 = haxe.ds.Option.Some({
                                    var context = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(array[1], context.config);
                                    switch (arraytree.idl.std.arraytree2entity.idl.PackagePathArrayTreeToEntity.process(context)) {
                                        case hxext.ds.Result.Ok(data):{
                                            data;
                                        };
                                        case hxext.ds.Result.Error(data):{
                                            return hxext.ds.Result.Error(data);
                                        };
                                    };
                                });
                            };
                        };
                        case arraytreeData:return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.UnmatchedStructElement(["version", "haxe_package"])));
                    };
                };
                var instance = new arraytree.idl.hxarraytree.entity.TargetConfig(switch (arg0) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementNotFound("version")));
                    };
                }, switch (arg1) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementNotFound("haxe_package")));
                    };
                });
                hxext.ds.Result.Ok(instance);
            };
        };
    };
}