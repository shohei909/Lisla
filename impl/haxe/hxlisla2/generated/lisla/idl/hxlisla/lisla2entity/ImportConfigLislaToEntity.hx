// This file is generated by hxarraytree.
package arraytree.idl.hxarraytree.arraytree2entity;
class ImportConfigArrayTreeToEntity {
    public static function process(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext):hxext.ds.Result<arraytree.idl.hxarraytree.entity.ImportConfig, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return switch context.arraytree.kind {
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (array.length == 2 && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "file")) && array[1].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):{
            var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
            var data = {
                arrayContext.readLabel("file");
                var arg0 = switch (arrayContext.read(arraytree.idl.std.arraytree2entity.util.file.FilePathArrayTreeToEntity.process)) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Error(data):{
                        return hxext.ds.Result.Error(data);
                    };
                };
                hxext.ds.Result.Ok(arraytree.idl.hxarraytree.entity.ImportConfig.File(arg0));
            };
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Error(error);
                };
            };
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "inline"))):{
            var arrayContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityArrayContext(array, 0, context.config);
            var data = {
                arrayContext.readLabel("inline");
                var arg0 = switch (arrayContext.readFixedInline(arraytree.idl.hxarraytree.arraytree2entity.GenerationConfigArrayTreeToEntity.process, arrayContext.length - 0)) {
                    case hxext.ds.Result.Ok(data):{
                        data;
                    };
                    case hxext.ds.Result.Error(data):{
                        return hxext.ds.Result.Error(data);
                    };
                };
                hxext.ds.Result.Ok(arraytree.idl.hxarraytree.entity.ImportConfig.Inline(arg0));
            };
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    hxext.ds.Result.Error(error);
                };
            };
        };
        case data:hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.UnmatchedEnumConstructor(["file", "inline"])));
    };
}