// This file is generated by hxarraytree.
package arraytree.idl.hxarraytree.arraytree2entity;
class GenerationConfigArrayTreeToEntity {
    public static function process(context:arraytree.idl.arraytree2entity.ArrayTreeToEntityContext):hxext.ds.Result<arraytree.idl.hxarraytree.entity.GenerationConfig, Array<arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError>> return switch (context.arraytree.kind) {
        case arraytree.data.tree.al.AlTreeKind.Leaf(_):{
            hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.CantBeString));
        };
        case arraytree.data.tree.al.AlTreeKind.Arr(array):{
            {
                var arg0 = haxe.ds.Option.None;
                var arg1 = [];
                var arg2 = haxe.ds.Option.None;
                var arg3 = haxe.ds.Option.None;
                var arg4 = haxe.ds.Option.None;
                for (arraytreeData in array) {
                    var context = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(arraytreeData, context.config);
                    switch arraytreeData.kind {
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (2 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "target")) && array[1].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_))):switch (arg0) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("target")));
                            };
                            case haxe.ds.Option.None:{
                                arg0 = haxe.ds.Option.Some(switch (arraytree.idl.hxarraytree.arraytree2entity.TargetDeclarationArrayTreeToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "import"))):arg1.push(switch (arraytree.idl.hxarraytree.arraytree2entity.ImportDeclarationArrayTreeToEntity.process(context)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        });
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "entity"))):switch (arg2) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("entity")));
                            };
                            case haxe.ds.Option.None:{
                                arg2 = haxe.ds.Option.Some(switch (arraytree.idl.hxarraytree.arraytree2entity.EntityDeclarationArrayTreeToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "arraytree_to_entity"))):switch (arg3) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("arraytree_to_entity")));
                            };
                            case haxe.ds.Option.None:{
                                arg3 = haxe.ds.Option.Some(switch (arraytree.idl.hxarraytree.arraytree2entity.ArrayTreeToEntityDeclarationArrayTreeToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case arraytree.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(arraytree.data.tree.al.AlTreeKind.Leaf(_ => "entity_to_arraytree"))):switch (arg4) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementDuplicated("entity_to_arraytree")));
                            };
                            case haxe.ds.Option.None:{
                                arg4 = haxe.ds.Option.Some(switch (arraytree.idl.hxarraytree.arraytree2entity.EntityToArrayTreeDeclarationArrayTreeToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case arraytreeData:return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(arraytreeData, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.UnmatchedStructElement(["target", "import", "entity", "arraytree_to_entity", "entity_to_arraytree"])));
                    };
                };
                var instance = new arraytree.idl.hxarraytree.entity.GenerationConfig(switch (arg0) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return hxext.ds.Result.Error(arraytree.idl.arraytree2entity.error.ArrayTreeToEntityError.ofArrayTree(context.arraytree, arraytree.idl.arraytree2entity.error.ArrayTreeToEntityErrorKind.StructElementNotFound("target")));
                    };
                }, arg1, switch (arg2) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(arraytree.data.tree.al.AlTreeKind.Arr(new arraytree.data.meta.core.ArrayWithMetadata([arraytree.data.tree.al.AlTreeKind.Leaf(new arraytree.data.meta.core.StringWithMetadata("entity"))])), context.config);
                        switch (arraytree.idl.hxarraytree.arraytree2entity.EntityDeclarationArrayTreeToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                }, switch (arg3) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(arraytree.data.tree.al.AlTreeKind.Arr(new arraytree.data.meta.core.ArrayWithMetadata([arraytree.data.tree.al.AlTreeKind.Leaf(new arraytree.data.meta.core.StringWithMetadata("arraytree_to_entity"))])), context.config);
                        switch (arraytree.idl.hxarraytree.arraytree2entity.ArrayTreeToEntityDeclarationArrayTreeToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                }, switch (arg4) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new arraytree.idl.arraytree2entity.ArrayTreeToEntityContext(arraytree.data.tree.al.AlTreeKind.Arr(new arraytree.data.meta.core.ArrayWithMetadata([arraytree.data.tree.al.AlTreeKind.Leaf(new arraytree.data.meta.core.StringWithMetadata("entity_to_arraytree"))])), context.config);
                        switch (arraytree.idl.hxarraytree.arraytree2entity.EntityToArrayTreeDeclarationArrayTreeToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                });
                hxext.ds.Result.Ok(instance);
            };
        };
    };
}