// This file is generated by hxlisla.
package lisla.idl.hxlisla.lisla2entity;
class GenerationConfigLislaToEntity {
    public static function process(context:lisla.idl.lisla2entity.LislaToEntityContext):hxext.ds.Result<lisla.idl.hxlisla.entity.GenerationConfig, Array<lisla.idl.lisla2entity.error.LislaToEntityError>> return switch (context.lisla.kind) {
        case lisla.data.tree.al.AlTreeKind.Leaf(_):{
            hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(context.lisla, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.CantBeString));
        };
        case lisla.data.tree.al.AlTreeKind.Arr(array):{
            {
                var arg0 = haxe.ds.Option.None;
                var arg1 = [];
                var arg2 = haxe.ds.Option.None;
                var arg3 = haxe.ds.Option.None;
                var arg4 = haxe.ds.Option.None;
                for (lislaData in array) {
                    var context = new lisla.idl.lisla2entity.LislaToEntityContext(lislaData, context.config);
                    switch lislaData.kind {
                        case lisla.data.tree.al.AlTreeKind.Arr(array) if (2 <= array.length && array[0].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_ => "target")) && array[1].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_))):switch (arg0) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(lislaData, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.StructElementDuplicated("target")));
                            };
                            case haxe.ds.Option.None:{
                                arg0 = haxe.ds.Option.Some(switch (lisla.idl.hxlisla.lisla2entity.TargetDeclarationLislaToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case lisla.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_ => "import"))):arg1.push(switch (lisla.idl.hxlisla.lisla2entity.ImportDeclarationLislaToEntity.process(context)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        });
                        case lisla.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_ => "entity"))):switch (arg2) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(lislaData, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.StructElementDuplicated("entity")));
                            };
                            case haxe.ds.Option.None:{
                                arg2 = haxe.ds.Option.Some(switch (lisla.idl.hxlisla.lisla2entity.EntityDeclarationLislaToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case lisla.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_ => "lisla_to_entity"))):switch (arg3) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(lislaData, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.StructElementDuplicated("lisla_to_entity")));
                            };
                            case haxe.ds.Option.None:{
                                arg3 = haxe.ds.Option.Some(switch (lisla.idl.hxlisla.lisla2entity.LislaToEntityDeclarationLislaToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case lisla.data.tree.al.AlTreeKind.Arr(array) if (1 <= array.length && array[0].kind.match(lisla.data.tree.al.AlTreeKind.Leaf(_ => "entity_to_lisla"))):switch (arg4) {
                            case haxe.ds.Option.Some(_):{
                                return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(lislaData, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.StructElementDuplicated("entity_to_lisla")));
                            };
                            case haxe.ds.Option.None:{
                                arg4 = haxe.ds.Option.Some(switch (lisla.idl.hxlisla.lisla2entity.EntityToLislaDeclarationLislaToEntity.process(context)) {
                                    case hxext.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case hxext.ds.Result.Error(data):{
                                        return hxext.ds.Result.Error(data);
                                    };
                                });
                            };
                        };
                        case lislaData:return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(lislaData, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.UnmatchedStructElement(["target", "import", "entity", "lisla_to_entity", "entity_to_lisla"])));
                    };
                };
                var instance = new lisla.idl.hxlisla.entity.GenerationConfig(switch (arg0) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return hxext.ds.Result.Error(lisla.idl.lisla2entity.error.LislaToEntityError.ofLisla(context.lisla, lisla.idl.lisla2entity.error.LislaToEntityErrorKind.StructElementNotFound("target")));
                    };
                }, arg1, switch (arg2) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new lisla.idl.lisla2entity.LislaToEntityContext(lisla.data.tree.al.AlTreeKind.Arr(new lisla.data.meta.core.ArrayWithMetadata([lisla.data.tree.al.AlTreeKind.Leaf(new lisla.data.meta.core.StringWithMetadata("entity"))])), context.config);
                        switch (lisla.idl.hxlisla.lisla2entity.EntityDeclarationLislaToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                }, switch (arg3) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new lisla.idl.lisla2entity.LislaToEntityContext(lisla.data.tree.al.AlTreeKind.Arr(new lisla.data.meta.core.ArrayWithMetadata([lisla.data.tree.al.AlTreeKind.Leaf(new lisla.data.meta.core.StringWithMetadata("lisla_to_entity"))])), context.config);
                        switch (lisla.idl.hxlisla.lisla2entity.LislaToEntityDeclarationLislaToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                }, switch (arg4) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        var childContext = new lisla.idl.lisla2entity.LislaToEntityContext(lisla.data.tree.al.AlTreeKind.Arr(new lisla.data.meta.core.ArrayWithMetadata([lisla.data.tree.al.AlTreeKind.Leaf(new lisla.data.meta.core.StringWithMetadata("entity_to_lisla"))])), context.config);
                        switch (lisla.idl.hxlisla.lisla2entity.EntityToLislaDeclarationLislaToEntity.process(childContext)) {
                            case hxext.ds.Result.Ok(data):{
                                data;
                            };
                            case hxext.ds.Result.Error(data):{
                                return hxext.ds.Result.Error(data);
                            };
                        };
                    };
                });
                hxext.ds.Result.Ok(instance);
            };
        };
    };
}