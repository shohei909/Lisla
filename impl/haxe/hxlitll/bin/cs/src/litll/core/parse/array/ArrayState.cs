// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.core.parse.array {
	public class ArrayState : global::haxe.lang.ParamEnum {
		
		public ArrayState(int index, object[] @params) : base(index, @params) {
		}
		
		
		public static readonly string[] __hx_constructs = new string[]{"Normal", "Escape", "Slash", "Comment", "OpeningQuote", "QuotedString", "UnquotedString"};
		
		public static readonly global::litll.core.parse.array.ArrayState Normal = new global::litll.core.parse.array.ArrayState(0, null);
		
		public static readonly global::litll.core.parse.array.ArrayState Escape = new global::litll.core.parse.array.ArrayState(1, null);
		
		public static global::litll.core.parse.array.ArrayState Slash(int length) {
			unchecked {
				return new global::litll.core.parse.array.ArrayState(2, new object[]{length});
			}
		}
		
		
		public static global::litll.core.parse.array.ArrayState Comment(global::litll.core.parse.array.CommentContext context) {
			unchecked {
				return new global::litll.core.parse.array.ArrayState(3, new object[]{context});
			}
		}
		
		
		public static global::litll.core.parse.array.ArrayState OpeningQuote(bool singleQuoted, int length) {
			unchecked {
				return new global::litll.core.parse.array.ArrayState(4, new object[]{singleQuoted, length});
			}
		}
		
		
		public static global::litll.core.parse.array.ArrayState QuotedString(global::litll.core.parse.@string.QuotedStringContext context) {
			unchecked {
				return new global::litll.core.parse.array.ArrayState(5, new object[]{context});
			}
		}
		
		
		public static global::litll.core.parse.array.ArrayState UnquotedString(global::litll.core.parse.@string.UnquotedStringContext context) {
			unchecked {
				return new global::litll.core.parse.array.ArrayState(6, new object[]{context});
			}
		}
		
		
		public override string getTag() {
			return global::litll.core.parse.array.ArrayState.__hx_constructs[this.index];
		}
		
		
	}
}


