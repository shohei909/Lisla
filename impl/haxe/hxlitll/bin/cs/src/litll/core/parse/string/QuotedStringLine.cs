// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.core.parse.@string {
	public class QuotedStringLine : global::haxe.lang.HxObject {
		
		public QuotedStringLine(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public QuotedStringLine(int startPosition) {
			global::litll.core.parse.@string.QuotedStringLine.__hx_ctor_litll_core_parse_string_QuotedStringLine(this, startPosition);
		}
		
		
		public static void __hx_ctor_litll_core_parse_string_QuotedStringLine(global::litll.core.parse.@string.QuotedStringLine __hx_this, int startPosition) {
			__hx_this.startPosition = startPosition;
			__hx_this.newLine = "";
			__hx_this.content = "";
			__hx_this.indent = 0;
		}
		
		
		public int startPosition;
		
		public string content;
		
		public int indent;
		
		public string newLine;
		
		public virtual bool isWhite() {
			return ( this.content.Length == this.indent );
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 334695532:
					{
						this.indent = ((int) (@value) );
						return @value;
					}
					
					
					case 1337328427:
					{
						this.startPosition = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2004862068:
					{
						this.newLine = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 334695532:
					{
						this.indent = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 427265337:
					{
						this.content = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1337328427:
					{
						this.startPosition = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1715662431:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "isWhite", 1715662431)) );
					}
					
					
					case 2004862068:
					{
						return this.newLine;
					}
					
					
					case 334695532:
					{
						return this.indent;
					}
					
					
					case 427265337:
					{
						return this.content;
					}
					
					
					case 1337328427:
					{
						return this.startPosition;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 334695532:
					{
						return ((double) (this.indent) );
					}
					
					
					case 1337328427:
					{
						return ((double) (this.startPosition) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1715662431:
					{
						return this.isWhite();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("newLine");
			baseArr.push("indent");
			baseArr.push("content");
			baseArr.push("startPosition");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


