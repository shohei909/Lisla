// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.core {
	public class LitllArray<T> : global::haxe.lang.HxObject, global::litll.core.LitllArray {
		
		public LitllArray(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public LitllArray(global::Array<T> data, global::litll.core.tag.ArrayTag tag) {
			global::litll.core.LitllArray<object>.__hx_ctor_litll_core_LitllArray<T>(((global::litll.core.LitllArray<T>) (this) ), ((global::Array<T>) (data) ), ((global::litll.core.tag.ArrayTag) (tag) ));
		}
		
		
		public static void __hx_ctor_litll_core_LitllArray<T_c>(global::litll.core.LitllArray<T_c> __hx_this, global::Array<T_c> data, global::litll.core.tag.ArrayTag tag) {
			__hx_this.data = data;
			__hx_this.tag = ( (( tag == null )) ? (new global::litll.core.tag.ArrayTag()) : (tag) );
		}
		
		
		public static object __hx_cast<T_c_c>(global::litll.core.LitllArray me) {
			return ( (( me != null )) ? (me.litll_core_LitllArray_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object litll_core_LitllArray_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::litll.core.LitllArray<T_c> new_me = new global::litll.core.LitllArray<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public global::Array<T> data;
		
		public global::litll.core.tag.ArrayTag tag;
		
		
		
		public virtual int get_length() {
			return this.data.length;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5790298:
					{
						this.tag = ((global::litll.core.tag.ArrayTag) (@value) );
						return @value;
					}
					
					
					case 1113806378:
					{
						this.data = ((global::Array<T>) (global::Array<object>.__hx_cast<T>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 261031087:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_length", 261031087)) );
					}
					
					
					case 520590566:
					{
						return this.get_length();
					}
					
					
					case 5790298:
					{
						return this.tag;
					}
					
					
					case 1113806378:
					{
						return this.data;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 520590566:
					{
						return ((double) (this.get_length()) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 261031087:
					{
						return this.get_length();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("length");
			baseArr.push("tag");
			baseArr.push("data");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.core {
	[global::haxe.lang.GenericInterface(typeof(global::litll.core.LitllArray<object>))]
	public interface LitllArray : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object litll_core_LitllArray_cast<T_c>();
		
		int get_length();
		
	}
}


