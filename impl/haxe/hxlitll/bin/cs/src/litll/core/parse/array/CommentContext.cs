// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.core.parse.array {
	public class CommentContext : global::haxe.lang.HxObject {
		
		public CommentContext(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public CommentContext(global::litll.core.parse.ParseContext top, global::litll.core.parse.array.ArrayContext parent, global::litll.core.parse.array.CommentKind kind) {
			global::litll.core.parse.array.CommentContext.__hx_ctor_litll_core_parse_array_CommentContext(this, top, parent, kind);
		}
		
		
		public static void __hx_ctor_litll_core_parse_array_CommentContext(global::litll.core.parse.array.CommentContext __hx_this, global::litll.core.parse.ParseContext top, global::litll.core.parse.array.ArrayContext parent, global::litll.core.parse.array.CommentKind kind) {
			__hx_this.top = top;
			__hx_this.parent = parent;
			__hx_this.kind = kind;
			__hx_this.keeping = false;
			__hx_this.state = global::litll.core.parse.array.CommentState.Head;
		}
		
		
		public global::litll.core.parse.array.ArrayContext parent;
		
		public global::litll.core.parse.ParseContext top;
		
		public bool keeping;
		
		public global::litll.core.parse.array.CommentState state;
		
		public global::litll.core.parse.array.CommentKind kind;
		
		public void process(int codePoint) {
			unchecked {
				global::litll.core.parse.array.CommentState _g = this.state;
				switch (((int) (codePoint) )) {
					case 10:
					{
						switch (_g.index) {
							case 0:
							{
								this.state = global::litll.core.parse.array.CommentState.Body;
								this.process(codePoint);
								break;
							}
							
							
							case 1:
							case 2:
							{
								this.writeComment(codePoint);
								switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
									case 0:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
									case 1:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
								}
								
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 13:
					{
						switch (_g.index) {
							case 0:
							{
								this.state = global::litll.core.parse.array.CommentState.Body;
								this.process(codePoint);
								break;
							}
							
							
							case 1:
							{
								this.writeComment(codePoint);
								this.state = global::litll.core.parse.array.CommentState.CarriageReturn;
								break;
							}
							
							
							case 2:
							{
								switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
									case 0:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
									case 1:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
								}
								
								this.parent.process(codePoint);
								break;
							}
							
							
						}
						
						break;
					}
					
					
					case 33:
					{
						switch (_g.index) {
							case 0:
							{
								this.keeping = true;
								this.state = global::litll.core.parse.array.CommentState.Body;
								break;
							}
							
							
							case 1:
							{
								this.writeComment(codePoint);
								break;
							}
							
							
							case 2:
							{
								switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
									case 0:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
									case 1:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
								}
								
								this.parent.process(codePoint);
								break;
							}
							
							
						}
						
						break;
					}
					
					
					default:
					{
						switch (_g.index) {
							case 0:
							{
								this.state = global::litll.core.parse.array.CommentState.Body;
								this.process(codePoint);
								break;
							}
							
							
							case 1:
							{
								this.writeComment(codePoint);
								break;
							}
							
							
							case 2:
							{
								switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
									case 0:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
									case 1:
									{
										this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
										break;
									}
									
									
								}
								
								this.parent.process(codePoint);
								break;
							}
							
							
						}
						
						break;
					}
					
				}
				
			}
		}
		
		
		public void end() {
			unchecked {
				switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
					case 0:
					{
						this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
						break;
					}
					
					
					case 1:
					{
						this.parent.state = global::litll.core.parse.array.ArrayState.Normal;
						break;
					}
					
					
				}
				
			}
		}
		
		
		public virtual void writeComment(int codePoint) {
			unchecked {
				switch (((int) (global::haxe.lang.Runtime.toInt(this.kind.index)) )) {
					case 0:
					{
						break;
					}
					
					
					case 1:
					{
						this.parent.writeDocument(codePoint);
						break;
					}
					
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1191829844:
					{
						this.kind = ((global::litll.core.parse.array.CommentKind) (@value) );
						return @value;
					}
					
					
					case 67859985:
					{
						this.state = ((global::litll.core.parse.array.CommentState) (@value) );
						return @value;
					}
					
					
					case 894737789:
					{
						this.keeping = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 5793429:
					{
						this.top = ((global::litll.core.parse.ParseContext) (@value) );
						return @value;
					}
					
					
					case 1836975402:
					{
						this.parent = ((global::litll.core.parse.array.ArrayContext) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1184833344:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "writeComment", 1184833344)) );
					}
					
					
					case 5047259:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "end", 5047259)) );
					}
					
					
					case 1900716655:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "process", 1900716655)) );
					}
					
					
					case 1191829844:
					{
						return this.kind;
					}
					
					
					case 67859985:
					{
						return this.state;
					}
					
					
					case 894737789:
					{
						return this.keeping;
					}
					
					
					case 5793429:
					{
						return this.top;
					}
					
					
					case 1836975402:
					{
						return this.parent;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1184833344:
					{
						this.writeComment(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
						break;
					}
					
					
					case 5047259:
					{
						this.end();
						break;
					}
					
					
					case 1900716655:
					{
						this.process(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("kind");
			baseArr.push("state");
			baseArr.push("keeping");
			baseArr.push("top");
			baseArr.push("parent");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


