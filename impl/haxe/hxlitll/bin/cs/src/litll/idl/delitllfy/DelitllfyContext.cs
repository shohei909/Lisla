// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace litll.idl.delitllfy {
	public class DelitllfyContext : global::haxe.lang.HxObject {
		
		public DelitllfyContext(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public DelitllfyContext(global::litll.core.Litll litll1, global::litll.idl.delitllfy.DelitllfyConfig config) {
			global::litll.idl.delitllfy.DelitllfyContext.__hx_ctor_litll_idl_delitllfy_DelitllfyContext(this, litll1, config);
		}
		
		
		public static void __hx_ctor_litll_idl_delitllfy_DelitllfyContext(global::litll.idl.delitllfy.DelitllfyContext __hx_this, global::litll.core.Litll litll1, global::litll.idl.delitllfy.DelitllfyConfig config) {
			__hx_this.litll = litll1;
			__hx_this.config = config;
		}
		
		
		public global::litll.core.Litll litll;
		
		public global::litll.idl.delitllfy.DelitllfyConfig config;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1204967106:
					{
						this.config = ((global::litll.idl.delitllfy.DelitllfyConfig) (@value) );
						return @value;
					}
					
					
					case 1963356567:
					{
						this.litll = ((global::litll.core.Litll) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1204967106:
					{
						return this.config;
					}
					
					
					case 1963356567:
					{
						return this.litll;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("config");
			baseArr.push("litll");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


