// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace cases {
	public class IdlTest : global::LitllTestCase {
		
		public IdlTest(global::haxe.lang.EmptyObject empty) : base(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) )) {
		}
		
		
		public IdlTest(object posInfos) : base(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) )) {
			global::cases.IdlTest.__hx_ctor_cases_IdlTest(this, posInfos);
		}
		
		
		public static void __hx_ctor_cases_IdlTest(global::cases.IdlTest __hx_this, object posInfos) {
			global::LitllTestCase.__hx_ctor__LitllTestCase(__hx_this, posInfos);
		}
		
		
		public virtual void testDelitllfy() {
			unchecked {
				int _g = 0;
				global::Array<object> _g1 = global::file.FileTools.readRecursively(global::TestIdl.IDL_DIRECTORY);
				while (( _g < _g1.length )) {
					string file1 = global::haxe.lang.Runtime.toString(_g1[_g]);
					 ++ _g;
					if (file1.EndsWith(".idl.litll")) {
						global::litll.core.LitllArray<object> caseData = null;
						global::litll.core.ds.Result _g2 = global::litll.core.parse.Parser.run(global::sys.io.File.getContent(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::TestIdl.IDL_DIRECTORY, "/"), file1)), null);
						switch (_g2.index) {
							case 0:
							{
								caseData = ((global::litll.core.LitllArray<object>) (global::litll.core.LitllArray<object>.__hx_cast<object>(((global::litll.core.LitllArray) (_g2.@params[0]) ))) );
								break;
							}
							
							
							case 1:
							{
								this.fail(global::haxe.lang.Runtime.concat("failed to parse file:  \n", global::Std.@string(((global::litll.core.parse.ParseError) (_g2.@params[0]) ))), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testDelitllfy", "cases.IdlTest", "IdlTest.hx"}, new int[]{1981972957}, new double[]{((double) (27) )})).label(file1);
								continue;
							}
							
							
						}
						
						global::litll.core.ds.Result _g3 = global::litll.idl.delitllfy.Delitllfier.run<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::litll.idl.std.delitllfy.idl.IdlDelitllfier), "process", 1900716655)) ), ((global::litll.core.LitllArray<object>) (caseData) ), default(global::litll.idl.delitllfy.DelitllfyConfig));
						switch (_g3.index) {
							case 0:
							{
								break;
							}
							
							
							case 1:
							{
								this.fail(global::haxe.lang.Runtime.concat("failed to delitllfy file:  \n", global::Std.@string(((global::litll.idl.delitllfy.DelitllfyError) (_g3.@params[0]) ))), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"testDelitllfy", "cases.IdlTest", "IdlTest.hx"}, new int[]{1981972957}, new double[]{((double) (37) )})).label(file1);
								continue;
							}
							
							
						}
						
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1126573719:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "testDelitllfy", 1126573719)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1126573719:
					{
						this.testDelitllfy();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}


