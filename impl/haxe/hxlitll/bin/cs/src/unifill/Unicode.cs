// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace unifill {
	public class Unicode : global::haxe.lang.HxObject {
		
		static Unicode() {
			unchecked {
				global::unifill.Unicode.minCodePoint = 0;
				global::unifill.Unicode.maxCodePoint = 1114111;
				global::unifill.Unicode.minHighSurrogate = 55296;
				global::unifill.Unicode.maxHighSurrogate = 56319;
				global::unifill.Unicode.minLowSurrogate = 56320;
				global::unifill.Unicode.maxLowSurrogate = 57343;
			}
		}
		
		
		public Unicode(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Unicode() {
			global::unifill.Unicode.__hx_ctor_unifill_Unicode(this);
		}
		
		
		public static void __hx_ctor_unifill_Unicode(global::unifill.Unicode __hx_this) {
		}
		
		
		public static int minCodePoint;
		
		public static int maxCodePoint;
		
		public static int minHighSurrogate;
		
		public static int maxHighSurrogate;
		
		public static int minLowSurrogate;
		
		public static int maxLowSurrogate;
		
		public static int decodeSurrogate(int hi, int lo) {
			unchecked {
				return ( ( ( hi - 55232 ) << 10 ) | ( lo & 1023 ) );
			}
		}
		
		
		public static int encodeHighSurrogate(int c) {
			unchecked {
				return ( (( c >> 10 )) + 55232 );
			}
		}
		
		
		public static int encodeLowSurrogate(int c) {
			unchecked {
				return ( ( c & 1023 ) | 56320 );
			}
		}
		
		
		public static bool isScalar(int code) {
			unchecked {
				if (( ( ( 0 <= code ) && ( code <= 1114111 ) ) &&  ! ((( ( 55296 <= code ) && ( code <= 56319 ) )))  )) {
					return  ! ((( ( 56320 <= code ) && ( code <= 57343 ) ))) ;
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public static bool isHighSurrogate(int code) {
			unchecked {
				if (( 55296 <= code )) {
					return ( code <= 56319 );
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public static bool isLowSurrogate(int code) {
			unchecked {
				if (( 56320 <= code )) {
					return ( code <= 57343 );
				}
				else {
					return false;
				}
				
			}
		}
		
		
	}
}


