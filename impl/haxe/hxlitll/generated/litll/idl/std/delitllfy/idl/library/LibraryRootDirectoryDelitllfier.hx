// This file is generated by hxlitll.
package litll.idl.std.delitllfy.idl.library;
class LibraryRootDirectoryDelitllfier {
    public static function process(context:litll.idl.delitllfy.DelitllfyContext):litll.core.ds.Result<litll.idl.std.data.idl.library.LibraryRootDirectory, litll.idl.delitllfy.DelitllfyError> return switch context.litll {
        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "ver")) && array.data[1].match(litll.core.Litll.Str(_.data => "Version"))):{
            var arrayContext = new litll.idl.delitllfy.DelitllfyArrayContext(array, 0, context.config);
            var data = litll.core.ds.Result.Ok(litll.idl.std.data.idl.library.LibraryRootDirectory.Ver);
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    litll.core.ds.Result.Err(error);
                };
            };
        };
        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "path")) && array.data[1].match(litll.core.Litll.Str(_.data => "DirectoryPath"))):{
            var arrayContext = new litll.idl.delitllfy.DelitllfyArrayContext(array, 0, context.config);
            var data = litll.core.ds.Result.Ok(litll.idl.std.data.idl.library.LibraryRootDirectory.Path);
            switch (arrayContext.closeOrError()) {
                case haxe.ds.Option.None:{
                    data;
                };
                case haxe.ds.Option.Some(error):{
                    litll.core.ds.Result.Err(error);
                };
            };
        };
        case data:litll.core.ds.Result.Err(litll.idl.delitllfy.DelitllfyError.ofLitll(context.litll, litll.idl.delitllfy.DelitllfyErrorKind.UnmatchedEnumConstructor(["ver", "path"])));
    };
}