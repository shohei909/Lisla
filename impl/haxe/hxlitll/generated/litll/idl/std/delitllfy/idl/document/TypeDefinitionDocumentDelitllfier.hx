// This file is generated by hxlitll.
package litll.idl.std.delitllfy.idl.document;
class TypeDefinitionDocumentDelitllfier {
    public static function process(context:litll.idl.delitllfy.DelitllfyContext):litll.core.ds.Result<litll.idl.std.data.idl.document.TypeDefinitionDocument, litll.idl.delitllfy.DelitllfyError> return switch (context.litll) {
        case litll.core.Litll.Str(_):{
            litll.core.ds.Result.Err(litll.idl.delitllfy.DelitllfyError.ofLitll(context.litll, litll.idl.delitllfy.DelitllfyErrorKind.CantBeString));
        };
        case litll.core.Litll.Arr(array):{
            {
                var arg0 = [];
                var arg1 = haxe.ds.Option.None;
                var arg2 = [];
                var arg3 = [];
                for (litllData in array.data) {
                    var context = new litll.idl.delitllfy.DelitllfyContext(litllData, context.config);
                    switch litllData {
                        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "document_tag"))):arg0.push({
                            var context = new litll.idl.delitllfy.DelitllfyContext(array.data[1], context.config);
                            switch (litll.idl.std.delitllfy.idl.TypeReferenceDelitllfier.process(context)) {
                                case litll.core.ds.Result.Ok(data):{
                                    data;
                                };
                                case litll.core.ds.Result.Err(data):{
                                    return litll.core.ds.Result.Err(data);
                                };
                            };
                        });
                        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "completion_const"))):arg2.push({
                            var context = new litll.idl.delitllfy.DelitllfyContext(array.data[1], context.config);
                            switch (litll.idl.std.delitllfy.core.AnyDelitllfier.process(context)) {
                                case litll.core.ds.Result.Ok(data):{
                                    data;
                                };
                                case litll.core.ds.Result.Err(data):{
                                    return litll.core.ds.Result.Err(data);
                                };
                            };
                        });
                        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "completion_type"))):arg3.push({
                            var context = new litll.idl.delitllfy.DelitllfyContext(array.data[1], context.config);
                            switch (litll.idl.std.delitllfy.idl.TypeReferenceDelitllfier.process(context)) {
                                case litll.core.ds.Result.Ok(data):{
                                    data;
                                };
                                case litll.core.ds.Result.Err(data):{
                                    return litll.core.ds.Result.Err(data);
                                };
                            };
                        });
                        case litllData:return litll.core.ds.Result.Err(litll.idl.delitllfy.DelitllfyError.ofLitll(litllData, litll.idl.delitllfy.DelitllfyErrorKind.UnmatchedStructElement([])));
                    };
                };
                var instance = new litll.idl.std.data.idl.document.TypeDefinitionDocument(arg0, arg1, arg2, arg3);
                litll.core.ds.Result.Ok(instance);
            };
        };
    };
}