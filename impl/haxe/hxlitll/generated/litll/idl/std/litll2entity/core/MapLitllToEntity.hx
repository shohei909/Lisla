// This file is generated by hxlitll.
package litll.idl.std.litll2entity.core;
class MapLitllToEntity {
    public static function process<K, V>(context:litll.idl.litll2entity.LitllToEntityContext, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.LitllMap<K, V>, litll.idl.litll2entity.LitllToEntityError> {
        return switch (ArrayLitllToEntity.process(context, litll.idl.std.litll2entity.core.PairLitllToEntity)) {
            case litll.core.ds.Result.Ok(data):{
                {
                    var instance = new litll.idl.std.data.core.LitllMap(data);
                    litll.core.ds.Result.Ok(instance);
                };
            };
            case litll.core.ds.Result.Err(data):{
                litll.core.ds.Result.Err(data);
            };
        };
    }
    public static function fixedInlineProcess<K, V>(context:litll.idl.litll2entity.LitllToEntityArrayContext, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.LitllMap<K, V>, litll.idl.litll2entity.LitllToEntityError> return null;
    public static function variableInlineProcess<K, V>(context:litll.idl.litll2entity.LitllToEntityArrayContext, kLitllToEntity, vLitllToEntity, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.LitllMap<K, V>, litll.idl.litll2entity.LitllToEntityError> return null;
}