// This file is generated by hxlitll.
package litll.idl.std.litll2entity.core;
class PairLitllToEntity {
    public static function process<K, V>(context:litll.idl.litll2entity.LitllToEntityContext, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.Pair<K, V>, litll.idl.litll2entity.LitllToEntityError> {
        return switch (context.litll) {
            case litll.core.Litll.Str(_):{
                litll.core.ds.Result.Err(litll.idl.litll2entity.LitllToEntityError.ofLitll(context.litll, litll.idl.litll2entity.LitllToEntityErrorKind.CantBeString));
            };
            case litll.core.Litll.Arr(data):{
                var arrayContext = new litll.idl.litll2entity.LitllToEntityArrayContext(data, 0, context.config);
                var instance = {
                    var arg0 = switch (arrayContext.read(kLitllToEntity.process)) {
                        case litll.core.ds.Result.Ok(data):{
                            data;
                        };
                        case litll.core.ds.Result.Err(data):{
                            return litll.core.ds.Result.Err(data);
                        };
                    };
                    var arg1 = switch (arrayContext.read(vLitllToEntity.process)) {
                        case litll.core.ds.Result.Ok(data):{
                            data;
                        };
                        case litll.core.ds.Result.Err(data):{
                            return litll.core.ds.Result.Err(data);
                        };
                    };
                    var instance = new litll.idl.std.data.core.Pair(arg0, arg1);
                    litll.core.ds.Result.Ok(instance);
                };
                switch (arrayContext.closeOrError()) {
                    case haxe.ds.Option.None:{
                        instance;
                    };
                    case haxe.ds.Option.Some(data):{
                        litll.core.ds.Result.Err(data);
                    };
                };
            };
        };
    }
    public static function fixedInlineProcess<K, V>(context:litll.idl.litll2entity.LitllToEntityArrayContext, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.Pair<K, V>, litll.idl.litll2entity.LitllToEntityError> return null;
    public static function variableInlineProcess<K, V>(context:litll.idl.litll2entity.LitllToEntityArrayContext, kLitllToEntity, vLitllToEntity, kLitllToEntity, vLitllToEntity):litll.core.ds.Result<litll.idl.std.data.core.Pair<K, V>, litll.idl.litll2entity.LitllToEntityError> return null;
}