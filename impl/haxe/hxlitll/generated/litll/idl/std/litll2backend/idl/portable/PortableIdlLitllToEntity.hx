// This file is generated by hxlitll.
package litll.idl.std.litll2backend.idl.portable;
class PortableIdlLitllToEntity {
    public static function process(context:litll.idl.litll2backend.LitllToEntityContext):litll.core.ds.Result<litll.idl.std.data.idl.portable.PortableIdl, litll.idl.litll2backend.LitllToEntityError> {
        return switch (ArrayLitllToEntity.process(context, litll.idl.std.litll2backend.idl.portable.PortableIdlElementLitllToEntity)) {
            case litll.core.ds.Result.Ok(data):{
                {
                    var instance = new litll.idl.std.data.idl.portable.PortableIdl(data);
                    litll.core.ds.Result.Ok(instance);
                };
            };
            case litll.core.ds.Result.Err(data):{
                litll.core.ds.Result.Err(data);
            };
        };
    }
    public static function fixedInlineProcess(context:litll.idl.litll2backend.LitllToEntityArrayContext):litll.core.ds.Result<litll.idl.std.data.idl.portable.PortableIdl, litll.idl.litll2backend.LitllToEntityError> return null;
    public static function variableInlineProcess(context:litll.idl.litll2backend.LitllToEntityArrayContext):litll.core.ds.Result<litll.idl.std.data.idl.portable.PortableIdl, litll.idl.litll2backend.LitllToEntityError> return null;
}