// This file is generated by hxlitll.
package litll.idl.hxlitll.litll2backend.idl.config;
class OutputFileLitllToBackend {
    public static function process(context:litll.idl.litll2backend.LitllToBackendContext):litll.core.ds.Result<litll.idl.hxlitll.data.idl.config.OutputFile, litll.idl.litll2backend.LitllToBackendError> return switch (context.litll) {
        case litll.core.Litll.Str(_):{
            litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(context.litll, litll.idl.litll2backend.LitllToBackendErrorKind.CantBeString));
        };
        case litll.core.Litll.Arr(array):{
            {
                var arg0 = haxe.ds.Option.None;
                var arg1 = haxe.ds.Option.None;
                for (litllData in array.data) {
                    var context = new litll.idl.litll2backend.LitllToBackendContext(litllData, context.config);
                    switch litllData {
                        case litll.core.Litll.Arr(array) if (1 <= array.length && array.data[0].match(litll.core.Litll.Str(_.data => "target"))):switch (arg0) {
                            case haxe.ds.Option.Some(_):{
                                return litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(litllData, litll.idl.litll2backend.LitllToBackendErrorKind.StructElementDuplicated("target")));
                            };
                            case haxe.ds.Option.None:{
                                arg0 = haxe.ds.Option.Some(switch (litll.idl.hxlitll.litll2backend.idl.config.TargetTupleLitllToBackend.process(context)) {
                                    case litll.core.ds.Result.Ok(data):{
                                        data;
                                    };
                                    case litll.core.ds.Result.Err(data):{
                                        return litll.core.ds.Result.Err(data);
                                    };
                                });
                            };
                        };
                        case litll.core.Litll.Arr(array) if (array.length == 2 && array.data[0].match(litll.core.Litll.Str(_.data => "filter")) && array.data[1].match(litll.core.Litll.Arr(_))):switch (arg1) {
                            case haxe.ds.Option.Some(_):{
                                return litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(litllData, litll.idl.litll2backend.LitllToBackendErrorKind.StructElementDuplicated("filter")));
                            };
                            case haxe.ds.Option.None:{
                                arg1 = haxe.ds.Option.Some({
                                    var context = new litll.idl.litll2backend.LitllToBackendContext(array.data[1], context.config);
                                    switch (litll.idl.hxlitll.litll2backend.idl.config.FilterTupleLitllToBackend.process(context)) {
                                        case litll.core.ds.Result.Ok(data):{
                                            data;
                                        };
                                        case litll.core.ds.Result.Err(data):{
                                            return litll.core.ds.Result.Err(data);
                                        };
                                    };
                                });
                            };
                        };
                        case litllData:return litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(litllData, litll.idl.litll2backend.LitllToBackendErrorKind.UnmatchedStructElement([])));
                    };
                };
                var instance = new litll.idl.hxlitll.data.idl.config.OutputFile(switch (arg0) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(context.litll, litll.idl.litll2backend.LitllToBackendErrorKind.StructElementNotFound("target")));
                    };
                }, switch (arg1) {
                    case haxe.ds.Option.Some(data):{
                        data;
                    };
                    case haxe.ds.Option.None:{
                        return litll.core.ds.Result.Err(litll.idl.litll2backend.LitllToBackendError.ofLitll(context.litll, litll.idl.litll2backend.LitllToBackendErrorKind.StructElementNotFound("filter")));
                    };
                });
                litll.core.ds.Result.Ok(instance);
            };
        };
    };
}